# import data
data1 <- read.csv("processedData2.csv")
nSubs = length(data1$Timestamp);
# h1: Still to Do!
# alpha = slow/easy
# beta = fast/easy
# gamma = slow/hard
# delta = fast/hard
wkldData = c(data1$WorkloadA, data1$WorkloadB, data1$WorkloadC, data1$WorkloadD)
tetrisDiff = c(rep(0,nSubs),rep(0,nSubs),rep(1,nSubs),rep(1,nSubs))
wordSpd = c(rep(0,nSubs),rep(1,nSubs),rep(0,nSubs),rep(1,nSubs))
condition = c(rep(1,nSubs),rep(2,nSubs),rep(3,nSubs),rep(4,nSubs))
h1 = aov(wkldData~tetrisDiff+wordSpd+tetrisDiff:wordSpd)
summary(h1)
h1a = aov(wkldData~tetrisDiff+wordSpd)
summary(h1a)
boxplot(wkldData~condition)
interaction.plot(x.factor = wordSpd, trace.factor = tetrisDiff, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Word Presentation Rate",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Game Difficulty")
interaction.plot(x.factor = tetrisDiff, trace.factor = wordSpd, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Game Difficulty",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Word Presentation Rate")
setwd("~/Kieran/CU/Spring 2022/Exp Design/proj/tetris4matlab/processing")
# import data
data1 <- read.csv("processedData2.csv")
nSubs = length(data1$Timestamp);
# ANOVA Table for H1!
# h1: Still to Do!
# alpha = slow/easy
# beta = fast/easy
# gamma = slow/hard
# delta = fast/hard
wkldData = c(data1$WorkloadA, data1$WorkloadB, data1$WorkloadC, data1$WorkloadD)
tetrisDiff = c(rep(0,nSubs),rep(0,nSubs),rep(1,nSubs),rep(1,nSubs))
wordSpd = c(rep(0,nSubs),rep(1,nSubs),rep(0,nSubs),rep(1,nSubs))
condition = c(rep(1,nSubs),rep(2,nSubs),rep(3,nSubs),rep(4,nSubs))
h1 = aov(wkldData~tetrisDiff+wordSpd+tetrisDiff:wordSpd)
summary(h1)
h1a = aov(wkldData~tetrisDiff+wordSpd)
summary(h1a)
boxplot(wkldData~condition)
interaction.plot(x.factor = wordSpd, trace.factor = tetrisDiff, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Word Presentation Rate",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Game Difficulty")
interaction.plot(x.factor = tetrisDiff, trace.factor = wordSpd, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Game Difficulty",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Word Presentation Rate")
# import data
data1 <- read.csv("processedData2.csv")
# import data
data1 <- read.csv("processedData2.csv")
nSubs = length(data1$Timestamp);
# h2: workload vs recall linear regression --> not sure this is really allowed w rep measures
rcllData = 100*c(data1$recallA, data1$recallB, data1$recallC, data1$recallD)
wkldData = c(data1$WorkloadA, data1$WorkloadB, data1$WorkloadC, data1$WorkloadD)
h2 = lm(rcllData~wkldData)
plot(wkldData,rcllData, main="H2) Recall vs Workload",
xlab="Reported Workload [MBS]", ylab="% Recall")
abline(h2)
boxplot(rcllData~condition)
boxplot(rcllData~condition)
wkldData = c(data1$WorkloadA, data1$WorkloadB, data1$WorkloadC, data1$WorkloadD)
tetrisDiff = c(rep(0,nSubs),rep(0,nSubs),rep(1,nSubs),rep(1,nSubs))
wordSpd = c(rep(0,nSubs),rep(1,nSubs),rep(0,nSubs),rep(1,nSubs))
condition = c(rep(1,nSubs),rep(2,nSubs),rep(3,nSubs),rep(4,nSubs))
h1 = aov(wkldData~tetrisDiff+wordSpd+tetrisDiff:wordSpd)
summary(h1)
h1a = aov(wkldData~tetrisDiff+wordSpd)
summary(h1a)
boxplot(wkldData~condition)
interaction.plot(x.factor = wordSpd, trace.factor = tetrisDiff, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Word Presentation Rate",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Game Difficulty")
interaction.plot(x.factor = tetrisDiff, trace.factor = wordSpd, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Game Difficulty",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Word Presentation Rate")
# h2: workload vs recall linear regression --> not sure this is really allowed w rep measures
rcllData = 100*c(data1$recallA, data1$recallB, data1$recallC, data1$recallD)
wkldData = c(data1$WorkloadA, data1$WorkloadB, data1$WorkloadC, data1$WorkloadD)
h2 = lm(rcllData~wkldData)
plot(wkldData,rcllData, main="H2) Recall vs Workload",
xlab="Reported Workload [MBS]", ylab="% Recall")
abline(h2)
boxplot(rcllData~condition)
rep(1:nSubs,4)
summary(h1f)
h1f = friedman.test(wkldData,condition,subjNum)
subjNum = rep(1:nSubs,4)
dition,subjNum)
summary(h1f)
h1f = friedman.test(wkldData,condition,subjNum)
summary(h1f)
h1f
interaction.plot(x.factor = wordSpd, trace.factor = tetrisDiff, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Word Presentation Rate",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Game Difficulty")
interaction.plot(x.factor = tetrisDiff, trace.factor = wordSpd, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Game Difficulty",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Word Presentation Rate")
h1a <- aov(wkldData~factor(tetrisDiff) + factor(wordSpd) + Error(factor(subjNum)))
summary(h1a)
ks.test(wkldData, 'pnorm')
plot(wkldData)
hist(wkldData)
# h1: non-parametric, friedmans anova with condition
subjNum = rep(1:nSubs,4)
h1f = friedman.test(wkldData,condition,subjNum)
summary(h1f)
boxplot(wkldData~condition)
h1f
h1f = friedman.test(wkldData,factor(condition),factor(subjNum))
h1f
data1
condition = c(rep(1,nSubs),rep(2,nSubs),rep(3,nSubs),rep(4,nSubs))
condition = factor(condition, c('Alpha','Beta','Gamma','Delta'))
boxplot(rcllData~condition)
boxplot(wkldData~condition)
h1f = friedman.test(wkldData,condition,factor(subjNum))
boxplot(wkldData~condition, main="H1) Workload by Condition",
xlab="Condition", ylab="Workload Rating")
condition = c(rep(1,nSubs),rep(2,nSubs),rep(3,nSubs),rep(4,nSubs))
# to present! h1: non-parametric, friedmans anova with condition
subjNum = rep(1:nSubs,4)
h1f = friedman.test(wkldData,condition,factor(subjNum))
summary(h1f)
boxplot(wkldData~condition, main="H1) Workload by Condition",
xlab="Condition", ylab="Workload Rating")
condition
levels(condition)
condition = factor(condition)
levels(condition)
h1f = friedman.test(wkldData,condition,factor(subjNum))
boxplot(wkldData~condition, main="H1) Workload by Condition",
xlab="Condition", ylab="Workload Rating")
levels(condition)
boxplot(wkldData~condition, main="H1) Workload by Condition",
xlab="Condition", ylab="Workload Rating")
levels(condition) = c("Alpha","Beta","Gamma","Delta")
boxplot(wkldData~condition, main="H1) Workload by Condition",
xlab="Condition", ylab="Workload Rating")
levels(condition)<-c("Alpha","Beta","Gamma","Delta")
# import data
data1 <- read.csv("processedData2.csv")
nSubs = length(data1$Timestamp);
# ANOVA Table for H1!
# h1: Still to Do!
# alpha = slow/easy
# beta = fast/easy
# gamma = slow/hard
# delta = fast/hard
wkldData = c(data1$WorkloadA, data1$WorkloadB, data1$WorkloadC, data1$WorkloadD)
tetrisDiff = c(rep(0,nSubs),rep(0,nSubs),rep(1,nSubs),rep(1,nSubs))
wordSpd = c(rep(0,nSubs),rep(1,nSubs),rep(0,nSubs),rep(1,nSubs))
condition = c(rep(1,nSubs),rep(2,nSubs),rep(3,nSubs),rep(4,nSubs))
condition <- factor(condition)
h1a = aov(wkldData~tetrisDiff+wordSpd)
summary(h1a)
boxplot(wkldData~condition)
interaction.plot(x.factor = wordSpd, trace.factor = tetrisDiff, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Word Presentation Rate",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Game Difficulty")
# hypothesis 1: 2-factor ANOVA
h1a <- aov(wkldData~factor(tetrisDiff) + factor(wordSpd) + factor(tetrisDiff):factor(wordSpd) +Error(factor(subjNum)))
summary(h1a)
# h1: test for normality
hist(wkldData)
ks.test(wkldData, 'pnorm')
# to present! h1: non-parametric, friedmans anova with condition
subjNum = rep(1:nSubs,4)
h1f = friedman.test(wkldData,condition,factor(subjNum))
summary(h1f)
boxplot(wkldData~condition, main="H1) Workload by Condition",
xlab="Condition", ylab="Workload Rating")
levels(condition)<-c("Alpha","Beta","Gamma","Delta")
axis(side=1, at=xtick, labels = FALSE)
text(x=xtick,  par("usr")[3],
labels = xtick, srt = 45, pos = 1, xpd = TRUE)
# import data
data1 <- read.csv("processedData2.csv")
nSubs = length(data1$Timestamp);
# ANOVA Table for H1!
# h1: Still to Do!
# alpha = slow/easy
# beta = fast/easy
# gamma = slow/hard
# delta = fast/hard
wkldData = c(data1$WorkloadA, data1$WorkloadB, data1$WorkloadC, data1$WorkloadD)
tetrisDiff = c(rep(0,nSubs),rep(0,nSubs),rep(1,nSubs),rep(1,nSubs))
wordSpd = c(rep(0,nSubs),rep(1,nSubs),rep(0,nSubs),rep(1,nSubs))
condition = c(rep(1,nSubs),rep(2,nSubs),rep(3,nSubs),rep(4,nSubs))
condition <- factor(condition)
h1a = aov(wkldData~tetrisDiff+wordSpd)
summary(h1a)
boxplot(wkldData~condition)
interaction.plot(x.factor = wordSpd, trace.factor = tetrisDiff, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Word Presentation Rate",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Game Difficulty")
# hypothesis 1: 2-factor ANOVA
h1a <- aov(wkldData~factor(tetrisDiff) + factor(wordSpd) + factor(tetrisDiff):factor(wordSpd) +Error(factor(subjNum)))
summary(h1a)
# h1: test for normality
hist(wkldData)
ks.test(wkldData, 'pnorm')
# to present! h1: non-parametric, friedmans anova with condition
subjNum = rep(1:nSubs,4)
h1f = friedman.test(wkldData,condition,factor(subjNum))
summary(h1f)
boxplot(wkldData~condition, main="H1) Workload by Condition",
xlab="Condition", ylab="Workload Rating")
levels(condition)<-c("Alpha","Beta","Gamma","Delta")
# ANOVA Table for H1!
# h1: Still to Do!
# alpha = slow/easy
# beta = fast/easy
# gamma = slow/hard
# delta = fast/hard
wkldData = c(data1$WorkloadA, data1$WorkloadB, data1$WorkloadC, data1$WorkloadD)
tetrisDiff = c(rep(0,nSubs),rep(0,nSubs),rep(1,nSubs),rep(1,nSubs))
wordSpd = c(rep(0,nSubs),rep(1,nSubs),rep(0,nSubs),rep(1,nSubs))
condition = c(rep(1,nSubs),rep(2,nSubs),rep(3,nSubs),rep(4,nSubs))
condition <- factor(condition)
levels(condition)<-c("Alpha","Beta","Gamma","Delta")
h1a = aov(wkldData~tetrisDiff+wordSpd)
summary(h1a)
boxplot(wkldData~condition)
interaction.plot(x.factor = wordSpd, trace.factor = tetrisDiff, response = wkldData, fun = median,   ylab = "Workload",
xlab = "Word Presentation Rate",
col = c("red", "blue"),
lty = 1, #line type
lwd = 2, #line width
trace.label = "Game Difficulty")
# hypothesis 1: 2-factor ANOVA
h1a <- aov(wkldData~factor(tetrisDiff) + factor(wordSpd) + factor(tetrisDiff):factor(wordSpd) +Error(factor(subjNum)))
summary(h1a)
# h1: test for normality
hist(wkldData)
ks.test(wkldData, 'pnorm')
# to present! h1: non-parametric, friedmans anova with condition
subjNum = rep(1:nSubs,4)
h1f = friedman.test(wkldData,condition,factor(subjNum))
summary(h1f)
boxplot(wkldData~condition, main="H1) Workload by Condition",
xlab="Condition", ylab="Workload Rating")
h1f
# to present! h1: non-parametric, friedmans anova with condition
subjNum = factor(rep(1:nSubs,4))
h1f = friedman.test(wkldData,condition,subjNum)
summary(h1f)
boxplot(wkldData~condition, main="H1) Workload by Condition",
xlab="Condition", ylab="Workload Rating")
h1f
hist(wkldData, main="H1) Histogram of Workload",
xlab="Workload Rating", ylab="Frequency")
ks.test(wkldData, 'pnorm')
hist(rcllData, main="H1) Histogram of Recall Percentage",
xlab="Recall Percentage", ylab="Frequency")
ks.test(rcllData, 'pnorm')
shapiro.test(rcllData)
shapiro.test(wkldData)
#h2: non-parametric, friedmans anova with condition
h2f = friedman.test(rcllData,condition,subjNum)
boxplot(rcllData~condition, main="H2) Recall % by Condition",
xlab="Condition", ylab="Recall %")
h2f
################################## H3 ######################################
# h3: workload vs precision linear regression
# should be ANOVA instead
prcsnData = 100*c(data1$precisionA, data1$precisionB, data1$precisionC, data1$precisionD)
h3 = lm(prcsnData~wkldData)
plot(wkldData,prcsnData, main="H3) Precision vs Workload",
xlab="Reported Workload [MBS]", ylab="% Precision")
abline(h3)
boxplot(prcsnData~condition)
# h2: test for normality
hist(prcsnData, main="H1) Histogram of Precision Percentage",
xlab="Precision Percentage", ylab="Frequency")
shapiro.test(prcsnData)
#h2: non-parametric, friedmans anova with condition
h3f = friedman.test(prcsnData,condition,subjNum)
boxplot(prcsnData~condition, main="H3) Precision % by Condition",
xlab="Condition", ylab="Precision %")
################################## H3 ######################################
# h3: workload vs precision linear regression
# should be ANOVA instead
prcsnData = 100*c(data1$precisionA, data1$precisionB, data1$precisionC, data1$precisionD)
h3 = lm(prcsnData~wkldData)
plot(wkldData,prcsnData, main="H3) Precision vs Workload",
xlab="Reported Workload [MBS]", ylab="% Precision")
abline(h3)
boxplot(prcsnData~condition)
# h3: test for normality
hist(prcsnData, main="H3) Histogram of Precision Percentage",
xlab="Precision Percentage", ylab="Frequency")
shapiro.test(prcsnData)
#h3: non-parametric, friedmans anova with condition
h3f = friedman.test(prcsnData,condition,subjNum)
boxplot(prcsnData~condition, main="H3) Precision % by Condition",
xlab="Condition", ylab="Precision %")
h3f
################################## H0 ######################################
corr <- cor.test(prcsnData, wkldData, method = 'spearman')
################################## H0 ######################################
corr <- cor.test(prcsnData, wkldData, method = 'spearman')
summary(corr)
corr
plot(wkldData,prcsnData)
plot(wkldData,rcllData)
corr <- cor.test(rcllData, wkldData, method = 'spearman')
corr
data1
wkldDataAvg = integer(nSubs)
for (i in 1:nSubs) {
wkldDataAvg[i] = mean(data1$WorkloadA[i], data1$WorkloadB[i], data1$WorkloadC[i], data1$WorkloadD[i])
}
wkldDataAvg
hist(wkldDataAvg)
shapiro.test(wkldDataAvg)
qqplot(wkldDataAvg)
r4 = cor(wkldDataAvg,data1$TetrisXP)
h4a = lm(wkldDataAvg~data1$TetrisXP)
plot(data1$TetrisXP,wkldDataAvg, main="H4a) Workload vs. Tetris Experience",
xlab="Self-Rated Tetris Experience", ylab="Reported Workload [MBS]")
abline(h4)
data1
# h4b: high workload experience vs workload
r4a = cor(wkldDataAvg,data1$TetrisXP)
h4a = lm(wkldDataAvg~data1$TetrisXP)
plot(data1$TetrisXP,wkldDataAvg, main="H4a) Workload vs. Tetris Experience",
xlab="Self-Rated Tetris Experience", ylab="Reported Workload [MBS]")
abline(h4a)
# h4b: high workload experience vs workload
r4b = cor(wkldDataAvg,data1$WorkloadXP)
h4b = lm(wkldDataAvg~data1$WorkloadXP)
plot(data1$WorkloadXP,wkldDataAvg, main="H4b) Workload vs. High-Workload Experience",
xlab="Self-Rated High-Workload Experience", ylab="Reported Workload [MBS]")
abline(h4b)
summary(h4a)
summary(h4b)
data1
# non-para
tetrisXP = factor(data1$TetrisXP)
h4f = friedman.test(wkldData,tetrisXP,subjNum)
summary(h4f)
boxplot(wkldData~tetrisXP, main="H4) Workload by Experience Level",
xlab="Tetris Experience", ylab="Workload Rating")
tetrisXP
# non-para
tetrisXP = rep(factor(data1$TetrisXP),4)
h4f = friedman.test(wkldData,tetrisXP,subjNum)
summary(h4f)
boxplot(wkldData~tetrisXP, main="H4) Workload by Experience Level",
xlab="Tetris Experience", ylab="Workload Rating")
